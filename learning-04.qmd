---
title: "Learning Reflection"
subtitle: "Week 4"
format:
  html:
    embed-resources: true
editor: visual
---

# Learning reflections

Learning reflections are part of your weekly homework and have a weight of 20% of your final grade. Write a reflection in your own words on the different parts of the weeks material below. You can also use your learning reflections as a notebook as you work through exercises or readings. Write as much as you like, but a minimum of 100 words in total.

# Lecture

# Homework Assignment

I thought the homework assignment was very beneficial to begin writing my own code from scratch. One of the most challenging things to me in coding is starting from the very beginning and breaking it down into manageable tasks that are meaningful from an analysis and interpretation perspective. I find it interesting how many different ways you can write code to accomplish the same thing, this seems to be especially true in the data tidying step.

When filtering the data to remove `NA`, I am curious about the various approaches. If using `filter(!is.na())` in combination with multiple pipes (`|>`), this significantly reduces the size of your data set because it removes any row with a single `NA` across all columns. Is there a way to remove `NA` values separately across each column?

# Readings

I thought the version control reading was very interesting and beneficial. While it was presented as a task to which many beginner coders are opposed, it is both crucial for collaboration and tracking changes and updates to your own work. As someone who consistently goes back to old homework assignments and projects to refresh myself on methods/techniques, helping my "future self" follow the flow and changes to work is incredibly helpful. I would like to continue this practice when I am finished with this class. However, I work most often on my local computer in R studio on a shared file from dropbox, so I will have to update/change this.

# Submit learning reflections

## Stage, Commit & Push to GitHub

This final section introduces the workflow you need to follow at the end of each live coding exercise, homework assignment, learning reflection. It ensures that all the changes you have made to files in this repository (folder) are synced with the version that is stored on GitHub. The steps will be described at the end of each of the files.

1.  Open the Git pane in RStudio. It's in the top right corner in a separate tab.
2.  **Stage** your changes by checking appropriate box next to all files (if you select one file with your mouse, you can then highlight them all with Ctrl + A on your keyboard and check all boxes)
3.  Write a meaningful commit message (e.g. "Completed homework assignment 1b) in the **Commit message** box
4.  Click **Commit**. Note that every commit needs to have a commit message associated with it.
5.  Go to your course-material GitHub repo and refresh the page. You should see your commit message next to the updated files.

## Open an issue on GitHub

Once you have ensured that the Quarto document renders without errors and you have pushed all your changes to GitHub, it is to complete the assignment by opening an issue on your course-material GitHub repo.

1.  Navigate to your course-material GitHub repo.
2.  Click on **Issues**, and then **New issue** button.
3.  Write a meaningful title in the **Title** field
4.  Tag the course instructor with using the `@` sign in combination with `larnsce` as the username
5.  Add any questions or comments
